[{"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js":"1","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js":"2","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js":"3","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js":"4","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js":"5"},{"size":499,"mtime":1608840215970,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608828731125,"results":"8","hashOfConfig":"7"},{"size":239,"mtime":1608838818216,"results":"9","hashOfConfig":"7"},{"size":288,"mtime":1608839661699,"results":"10","hashOfConfig":"7"},{"size":1781,"mtime":1608839604223,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v29bki",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js",[],["24","25"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js",["26","27","28","29"],"import '../Map.css'\nimport mapboxgl from \"mapbox-gl\";\nimport React, { useState, useEffect } from \"react\";\n\nconst MapboxGLMap = () => {\n    // const [map] = useState(null);\n    const [countries, updateCountries] = useState([\"in\", \"iso_3166_1_alpha_3\"]);\n    const [search, updateSearch] = useState(\"\")\n    const mapContainer = React.createRef();\n  \n    useEffect(() => {\n      mapboxgl.accessToken =\n        \"pk.eyJ1IjoiamFjb2JrYWdvbiIsImEiOiJja2owZHM4NGUxbTN1MnJtd25pbHh5a2YwIn0.Ipv-6ntDnJw4WUD9ly3gcw\";\n      \n        const map = new mapboxgl.Map({\n         container: \"map\",\n          style: \"mapbox://styles/mapbox/streets-v11\", // stylesheet location\n          center: [5, 46],\n          zoom: 2,\n        });\n  \n        map.on(\"load\", () => {\n          // setMap(map);\n          // map.resize();\n          map.addLayer(\n            {\n              id: \"country-boundaries\",\n              source: {\n                type: \"vector\",\n                url: \"mapbox://mapbox.country-boundaries-v1\",\n              },\n              \"source-layer\": \"country_boundaries\",\n              type: \"fill\",\n              paint: {\n                \"fill-color\": \"#d2361e\",\n                \"fill-opacity\": 0.4,\n              },\n            },\n            \"country-label\"\n          );\n          map.setFilter(\"country-boundaries\", countries);\n        });\n  \n      \n    });\n  \n    const handleSearch = (event) => {\n      //   updateSearch(search)\n      console.log(event.target.value)\n        \n    }\n  \n  \n     const handleChange = (event) => {\n     updateCountries([...countries, search])\n  \n      console.log(countries)\n      console.log(event.target.value.toString())\n      \n    };\n  \n    return (\n    <div>\n    {\n    <div id=\"map\"></div>\n    }\n  </div>\n    )};\n  \n  export default MapboxGLMap;\n  ",{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":8,"column":20,"nodeType":"36","messageId":"37","endLine":8,"endColumn":32},{"ruleId":"34","severity":1,"message":"38","line":9,"column":11,"nodeType":"36","messageId":"37","endLine":9,"endColumn":23},{"ruleId":"34","severity":1,"message":"39","line":47,"column":11,"nodeType":"36","messageId":"37","endLine":47,"endColumn":23},{"ruleId":"34","severity":1,"message":"40","line":54,"column":12,"nodeType":"36","messageId":"37","endLine":54,"endColumn":24},"no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-unused-vars","'updateSearch' is assigned a value but never used.","Identifier","unusedVar","'mapContainer' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]