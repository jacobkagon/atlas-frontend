[{"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js":"1","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js":"2","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js":"3","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js":"4","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js":"5","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js":"6","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Reviews.js":"7","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js":"8","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Globe.js":"9","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Cover.js":"10","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/FavoritesContainer.js":"11","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js":"12","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js":"13","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewsSearch.js":"14","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/AddReview.js":"15","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Logout.js":"16","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js":"17","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewModal.js":"18"},{"size":702,"mtime":1609355385854,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1608828731125,"results":"21","hashOfConfig":"20"},{"size":1292,"mtime":1609980941854,"results":"22","hashOfConfig":"20"},{"size":3231,"mtime":1609974120073,"results":"23","hashOfConfig":"20"},{"size":4516,"mtime":1609885429671,"results":"24","hashOfConfig":"20"},{"size":5008,"mtime":1610047920947,"results":"25","hashOfConfig":"20"},{"size":1141,"mtime":1610049902504,"results":"26","hashOfConfig":"20"},{"size":6558,"mtime":1610047551524,"results":"27","hashOfConfig":"20"},{"size":58624,"mtime":1609363402937,"results":"28","hashOfConfig":"20"},{"size":1011,"mtime":1610047683314,"results":"29","hashOfConfig":"20"},{"size":1115,"mtime":1609777789504,"results":"30","hashOfConfig":"20"},{"size":1486,"mtime":1609792299288,"results":"31","hashOfConfig":"20"},{"size":22210,"mtime":1610049564880,"results":"32","hashOfConfig":"20"},{"size":317,"mtime":1609985430614,"results":"33","hashOfConfig":"20"},{"size":1631,"mtime":1610049794254,"results":"34","hashOfConfig":"20"},{"size":317,"mtime":1609981065093,"results":"35","hashOfConfig":"20"},{"size":2828,"mtime":1610047517684,"results":"36","hashOfConfig":"20"},{"size":3321,"mtime":1610038555029,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"v29bki",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"41"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"41"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"41"},"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js",["80","81","82","83"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./containers/LoginContainer\";\nimport SignUp from \"./containers/SignUpContainer\";\nimport HomeContainer from \"./containers/HomeContainer\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["84","85"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js",["86","87"],"import React, { Component } from \"react\";\nimport MapboxGLMap from \"../components/MapBoxGLMap\";\nimport Search from \"../components/Search\";\nimport Navbar from \"./Navbar\";\nimport FavoritesContainer from \"./FavoritesContainer\";\n\nconst token = localStorage.getItem(\"token\");\nconst USERID = localStorage.getItem(\"user_id\");\nconst favoritesId = localStorage.getItem(\"favorites_id\");\n\nclass HomeContainer extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loggedIn: false,\n      countries: [],\n      modalOpen: false,\n      countryId: \"\",\n    };\n  }\n\n  componentDidMount() {\n    if (token) {\n      fetch(`http://localhost:3000/api/v1/users/${USERID}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((resp) => resp.json())\n        .then((data) => {\n          data.countries.map((country) =>\n            this.setState({\n              countries: [...this.state.countries, country.country_code],\n            })\n          );\n        });\n    }\n  }\n\n  handleSearch = (event) => {\n    fetch(\"http://localhost:3000/api/v1/countries\", {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        data.filter((country) => {\n          if (\n            country.country_code === event &&\n            !this.state.countries.includes(country.country_code)\n          ) {\n            this.setState({\n              countries: [...this.state.countries, country.country_code],\n              countryId: country.id,\n            });\n          } else if (this.state.countries.includes(undefined)) {\n            window.location.reload();\n          }\n        });\n      });\n    this.addCountry(event);\n  };\n\n  addCountry = (event) => {\n    fetch(\"http://localhost:3000/api/v1/countries\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        country_code: event,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        this.setState({\n          countries: [...this.state.countries, data.country_code],\n          countryId: data.id,\n        });\n      });\n  };\n\n  removeCountry = (event) => {\n    let newCountry = this.state.countries.filter(\n      (country) => country !== event\n    );\n    this.setState({\n      countries: newCountry,\n    });\n    console.log(newCountry);\n  };\n\n  setModal = (openOrClose) => this.setState({ modalOpen: openOrClose });\n\n  render() {\n    return (\n      <div>\n        <div>\n          {token\n            ? [\n                <Navbar key={1} />,\n                <Search\n                  handleAddReview={this.props.handleAddReview}\n                  key={2}\n                  handleSearch={this.handleSearch}\n                  setModal={this.setModal}\n                  removeCountry={this.removeCountry}\n                />,\n              ]\n            : null}\n        </div>\n        <MapboxGLMap key={3} countries={this.state.countries} />\n        {this.state.countryId !== \"\" ? (\n          <FavoritesContainer key={4} countryId={this.state.countryId} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js",["88","89","90","91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Login from \"../Login.css\";\nimport signUp from \"./SignUpContainer\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Atlas\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn({ handleUser }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password,\n        },\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        localStorage.setItem(\"token\", data.jwt);\n        handleUser(data.user);\n        if (data.user) {\n          history.push(\"/home\");\n          window.location.reload()\n        }\n      });\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={(e) => handleSubmit(e)}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n            </Grid>\n            <Grid item container>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js",["94","95"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Reviews.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js",["96","97","98","99"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Globe.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Cover.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/FavoritesContainer.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js",["100","101","102"],"import \"../Map.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport React, { useState, useEffect } from \"react\";\n\nconst MapboxGLMap = ({ countries }) => {\n  const [countryNames, newNames] = useState([\"name_en\"]);\n  const mapContainer = React.createRef();\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiamFjb2JrYWdvbiIsImEiOiJja2owZHM4NGUxbTN1MnJtd25pbHh5a2YwIn0.Ipv-6ntDnJw4WUD9ly3gcw\";\n    let firstPart = [\"in\", \"iso_3166_1_alpha_3\"];\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/jacobkagon/ckjak6kt589rb19p228nwrycv\", // stylesheet location\n      center: [5, 46],\n      zoom: 2,\n    });\n\n    map.on(\"load\", () => {\n      // setMap(map);\n      map.resize();\n      map.addLayer(\n        {\n          id: \"country-boundaries\",\n          source: {\n            type: \"vector\",\n            url: \"mapbox://mapbox.country-boundaries-v1\",\n          },\n          \"source-layer\": \"country_boundaries\",\n          type: \"fill\",\n          paint: {\n            \"fill-color\": \"#780000\",\n            \"fill-opacity\": 0.4,\n          },\n        },\n        \"country-label\"\n      );\n      map.setFilter(\"country-boundaries\", firstPart.concat(countries));\n      map.addControl(\n        new MapboxGeocoder({\n          accessToken: mapboxgl.accessToken,\n          mapboxgl: mapboxgl,\n        })\n      );\n    });\n  });\n\n  return <div>{<div id=\"map\"></div>}</div>;\n};\n\nexport default MapboxGLMap;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js",["103","104","105","106","107"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewsSearch.js",["108"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/AddReview.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Logout.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewModal.js",["109"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n// import TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Button from \"@material-ui/core/Button\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nconst userId = localStorage.getItem(\"user_id\");\nconst token = localStorage.getItem(\"token\");\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  paper: {\n    position: \"absolute\",\n    width: 300,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst ReviewModal = ({ open, renderReviewModal, countries, event }) => {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [countryId, newId] = React.useState(\"\");\n  const [value, setValue] = React.useState(0);\n  const [text, setText] = React.useState(\"\");\n\n  useEffect(() => {\n    countries.filter((country) =>\n      country.country_code === event ? newId(country.id) : null\n    );\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (text !== \"\") {\n    fetch(\"http://localhost:3000/api/v1/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer  ${token}`,\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        country_id: countryId,\n        rating: value,\n        body: text,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => console.log(data));\n    document.getElementsByTagName(\"form\")[1].reset();\n  } else{\n    alert(\"Cannoy submit empty story\")\n  }\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Add a Story</h2>\n\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => handleSubmit(e)}\n      >\n        <Rating\n          style={{ width: 200 }}\n          name=\"simple-controlled\"\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n        />\n        <TextareaAutosize\n          aria-label=\"minimum height\"\n          rowsMin={3}\n          placeholder=\"\"\n          onChange={(event) => setText(event.target.value)}\n        />\n        <Button type=\"submit\" color=\"primary\" className={classes.submit}>\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n\n  const closeModal = () => {\n    renderReviewModal(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={closeModal}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default ReviewModal;\n",{"ruleId":"110","severity":1,"message":"111","line":6,"column":35,"nodeType":"112","messageId":"113","endLine":6,"endColumn":40},{"ruleId":"110","severity":1,"message":"114","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":13},{"ruleId":"110","severity":1,"message":"115","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":14},{"ruleId":"110","severity":1,"message":"116","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":21},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"110","severity":1,"message":"121","line":9,"column":7,"nodeType":"112","messageId":"113","endLine":9,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":45,"column":31,"nodeType":"124","messageId":"125","endLine":45,"endColumn":33},{"ruleId":"110","severity":1,"message":"126","line":1,"column":27,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},{"ruleId":"110","severity":1,"message":"114","line":15,"column":8,"nodeType":"112","messageId":"113","endLine":15,"endColumn":13},{"ruleId":"110","severity":1,"message":"127","line":16,"column":8,"nodeType":"112","messageId":"113","endLine":16,"endColumn":14},{"ruleId":"110","severity":1,"message":"128","line":17,"column":27,"nodeType":"112","messageId":"113","endLine":17,"endColumn":33},{"ruleId":"110","severity":1,"message":"129","line":55,"column":10,"nodeType":"112","messageId":"113","endLine":55,"endColumn":16},{"ruleId":"110","severity":1,"message":"130","line":55,"column":18,"nodeType":"112","messageId":"113","endLine":55,"endColumn":27},{"ruleId":"110","severity":1,"message":"114","line":15,"column":8,"nodeType":"112","messageId":"113","endLine":15,"endColumn":13},{"ruleId":"110","severity":1,"message":"128","line":16,"column":27,"nodeType":"112","messageId":"113","endLine":16,"endColumn":33},{"ruleId":"110","severity":1,"message":"131","line":18,"column":8,"nodeType":"112","messageId":"113","endLine":18,"endColumn":17},{"ruleId":"110","severity":1,"message":"132","line":19,"column":8,"nodeType":"112","messageId":"113","endLine":19,"endColumn":16},{"ruleId":"110","severity":1,"message":"111","line":23,"column":9,"nodeType":"112","messageId":"113","endLine":23,"endColumn":14},{"ruleId":"110","severity":1,"message":"133","line":23,"column":16,"nodeType":"112","messageId":"113","endLine":23,"endColumn":26},{"ruleId":"110","severity":1,"message":"134","line":7,"column":10,"nodeType":"112","messageId":"113","endLine":7,"endColumn":22},{"ruleId":"110","severity":1,"message":"135","line":7,"column":24,"nodeType":"112","messageId":"113","endLine":7,"endColumn":32},{"ruleId":"110","severity":1,"message":"136","line":8,"column":9,"nodeType":"112","messageId":"113","endLine":8,"endColumn":21},{"ruleId":"110","severity":1,"message":"126","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"110","severity":1,"message":"137","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":17},{"ruleId":"110","severity":1,"message":"138","line":65,"column":9,"nodeType":"112","messageId":"113","endLine":65,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":77,"column":40,"nodeType":"124","messageId":"125","endLine":77,"endColumn":42},{"ruleId":"110","severity":1,"message":"139","line":91,"column":9,"nodeType":"112","messageId":"113","endLine":91,"endColumn":24},{"ruleId":"140","severity":1,"message":"141","line":5,"column":5,"nodeType":"142","messageId":"143","endLine":7,"endColumn":10},{"ruleId":"110","severity":1,"message":"144","line":1,"column":28,"nodeType":"112","messageId":"113","endLine":1,"endColumn":36},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'SignUp' is defined but never used.","'HomeContainer' is defined but never used.","no-native-reassign",["145"],"no-negated-in-lhs",["146"],"'favoritesId' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'signUp' is defined but never used.","'Router' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'useHistory' is defined but never used.","'countryNames' is assigned a value but never used.","'newNames' is assigned a value but never used.","'mapContainer' is assigned a value but never used.","'SearchBar' is defined but never used.","'countryIds' is assigned a value but never used.","'filterCountryID' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]