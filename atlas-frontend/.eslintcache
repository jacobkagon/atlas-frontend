
[{"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js":"1","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js":"2","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js":"3","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js":"4","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js":"5","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js":"6","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js":"7","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js":"8","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js":"9","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js":"10"},{"size":702,"mtime":1609355385854,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608828731125,"results":"13","hashOfConfig":"12"},{"size":898,"mtime":1609361570571,"results":"14","hashOfConfig":"12"},{"size":893,"mtime":1609269486230,"results":"15","hashOfConfig":"12"},{"size":1455,"mtime":1609281884801,"results":"16","hashOfConfig":"12"},{"size":139,"mtime":1608857299944,"results":"17","hashOfConfig":"12"},{"size":1157,"mtime":1609270180605,"results":"18","hashOfConfig":"12"},{"size":4471,"mtime":1609355855039,"results":"19","hashOfConfig":"12"},{"size":1831,"mtime":1609270457203,"results":"20","hashOfConfig":"12"},{"size":5096,"mtime":1609361055663,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"v29bki",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"25"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"25"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"25"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"25"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js",["48","49","50","51"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./containers/LoginContainer\";\nimport SignUp from \"./containers/SignUpContainer\";\nimport HomeContainer from \"./containers/HomeContainer\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["52","53"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js",["54"],"import React, { Component } from 'react';\nimport MapboxGLMap from '../components/MapBoxGLMap'\nimport Search from '../components/Search'\nimport SimpleModal from '../components/Modal'\n\n\n\nclass HomeContainer extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            countries: [],\n            modalOpen: false\n        }\n    }\n\n    setModal = openOrClose => this.setState({modalOpen: openOrClose})\n\n    handleSearch = (event) => {\n        this.setState({\n            countries: [...this.state.countries, event]\n        })\n        // console.log(\"ttttttt\")\n\n    }\n\n\n    render() {\n        return (\n            <div>\n          \n                <Search handleSearch={this.handleSearch} setModal={this.setModal}/>\n                <MapboxGLMap countries={this.state.countries}/>\n                \n            </div>\n        );\n    }\n}\n\nexport default HomeContainer;\n\n\n\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js",["55","56","57"],"import '../Map.css'\nimport mapboxgl from \"mapbox-gl\";\nimport React, { useState, useEffect } from \"react\";\n\n\nconst MapboxGLMap = ({countries}) => {\n  const [countryNames, newNames] = useState([\"name_en\"])\n    const mapContainer = React.createRef();\n  \n    useEffect(() => {\n      mapboxgl.accessToken =\n        \"pk.eyJ1IjoiamFjb2JrYWdvbiIsImEiOiJja2owZHM4NGUxbTN1MnJtd25pbHh5a2YwIn0.Ipv-6ntDnJw4WUD9ly3gcw\";\n      let firstPart = [\"in\", \"iso_3166_1_alpha_3\"]\n        const map = new mapboxgl.Map({\n         container: \"map\",\n          style: \"mapbox://styles/jacobkagon/ckjak6kt589rb19p228nwrycv\", // stylesheet location\n          center: [5, 46],\n          zoom: 2,\n        });\n  \n        map.on(\"load\", () => {\n          // setMap(map);\n           map.resize();\n          map.addLayer(\n            {\n              id: \"country-boundaries\",\n              source: {\n                type: \"vector\",\n                url: \"mapbox://mapbox.country-boundaries-v1\",\n              },\n              \"source-layer\": \"country_boundaries\",\n              type: \"fill\",\n              paint: {\n                \"fill-color\": \"#780000 \",\n                \"fill-opacity\": 0.4,\n              },\n            },\n            \"country-label\"\n          );\n          map.setFilter(\"country-boundaries\", firstPart.concat(countries));\n        });\n  \n      \n    });\n  \n  \n    return (\n    <div>\n    {\n    <div id=\"map\"></div>\n    }\n  </div>\n    )};\n  \n  export default MapboxGLMap;\n  ","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js",["58"],"import React, {useState} from \"react\";\nimport SearchBar from \"material-ui-search-bar\";\nimport SimpleModal from \"./Modal\";\n\n\nfunction Search({ handleSearch}) {\n  const [modal, changeModal] = useState(false)\n  const [event, newEvent] = useState(\"\")\n  \n  const handleModal = (event) => {\n    event.preventDefault()\n    changeModal(true)\n    newEvent(event.target.search.value)\n    document.getElementsByTagName(\"form\")[0].reset()\n  }\n\n  return (\n    <div>\n    {modal ? <SimpleModal changeModal={changeModal} handleSearch={handleSearch} event={event} open={modal}/> : null}\n     <form onSubmit={(e) => handleModal(e)}>\n        <div className=\"form-group\">\n          <label>Search by Country Code:</label>\n          <input type=\"text\" name=\"search\" className=\"form-control\" />\n          <input type=\"submit\" value=\"Search\" className=\"btn btn-success\" />\n        </div>\n      </form>\n    \n    </div>\n\n    //  <SearchBar onSubmit={(event) => handleSearch(event)}>\n    //  <label>Search by Country Code:</label>\n    //      <input type=\"text\" name=\"search\"  />\n    //      <input type=\"submit\" value=\"Search\" />\n    //   </SearchBar>\n  );\n}\n\nexport default Search;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js",["59","60","61","62","63"],"import React, {useState, useEffect} from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Login from '../Login.css'\nimport signUp from './SignUpContainer'\nimport { \n  BrowserRouter as Router,\n  \n  useHistory \n} from \"react-router-dom\";\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Atlas\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn({handleUser}) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    \n    fetch('http://localhost:3000/api/v1/login', {\n      method: \"POST\",\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      body: JSON.stringify({\n        user: {\n         username,\n         password\n}})\n    })\n    .then(resp => resp.json())\n    .then(data => {\n      console.log(data)\n      localStorage.setItem(\"token\", data.jwt)\n      handleUser(data.user)\n      history.push(\"/home\");\n    })\n     \n  .catch(errors => {\n    setErrors(errors);\n    console.error(errors);\n  });\n  setUsername(\"\")\n  setPassword(\"\")\n\n}\n\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={e => handleSubmit(e)}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n            </Grid>\n            <Grid item container>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js",["64","65","66"],{"ruleId":"67","severity":1,"message":"68","line":6,"column":35,"nodeType":"69","messageId":"70","endLine":6,"endColumn":40},{"ruleId":"67","severity":1,"message":"71","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":13},{"ruleId":"67","severity":1,"message":"72","line":8,"column":8,"nodeType":"69","messageId":"70","endLine":8,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":9,"column":8,"nodeType":"69","messageId":"70","endLine":9,"endColumn":21},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"67","severity":1,"message":"78","line":4,"column":8,"nodeType":"69","messageId":"70","endLine":4,"endColumn":19},{"ruleId":"67","severity":1,"message":"79","line":7,"column":10,"nodeType":"69","messageId":"70","endLine":7,"endColumn":22},{"ruleId":"67","severity":1,"message":"80","line":7,"column":24,"nodeType":"69","messageId":"70","endLine":7,"endColumn":32},{"ruleId":"67","severity":1,"message":"81","line":8,"column":11,"nodeType":"69","messageId":"70","endLine":8,"endColumn":23},{"ruleId":"67","severity":1,"message":"82","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":17},{"ruleId":"67","severity":1,"message":"83","line":1,"column":26,"nodeType":"69","messageId":"70","endLine":1,"endColumn":35},{"ruleId":"67","severity":1,"message":"71","line":15,"column":8,"nodeType":"69","messageId":"70","endLine":15,"endColumn":13},{"ruleId":"67","severity":1,"message":"84","line":16,"column":8,"nodeType":"69","messageId":"70","endLine":16,"endColumn":14},{"ruleId":"67","severity":1,"message":"85","line":18,"column":20,"nodeType":"69","messageId":"70","endLine":18,"endColumn":26},{"ruleId":"67","severity":1,"message":"86","line":60,"column":10,"nodeType":"69","messageId":"70","endLine":60,"endColumn":16},{"ruleId":"67","severity":1,"message":"71","line":15,"column":8,"nodeType":"69","messageId":"70","endLine":15,"endColumn":13},{"ruleId":"67","severity":1,"message":"85","line":17,"column":22,"nodeType":"69","messageId":"70","endLine":17,"endColumn":28},{"ruleId":"67","severity":1,"message":"86","line":61,"column":12,"nodeType":"69","messageId":"70","endLine":61,"endColumn":18},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'SignUp' is defined but never used.","'HomeContainer' is defined but never used.","no-native-reassign",["87"],"no-negated-in-lhs",["88"],"'SimpleModal' is defined but never used.","'countryNames' is assigned a value but never used.","'newNames' is assigned a value but never used.","'mapContainer' is assigned a value but never used.","'SearchBar' is defined but never used.","'useEffect' is defined but never used.","'signUp' is defined but never used.","'Router' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]

