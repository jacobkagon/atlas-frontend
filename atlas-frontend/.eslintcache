[{"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js":"1","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js":"2","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js":"3","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js":"4","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js":"5","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js":"6","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/FavoritesContainer.js":"7","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js":"8","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js":"9","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js":"10","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Globe.js":"11","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Cover.js":"12","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Reviews.js":"13","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Logout.js":"14","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js":"15","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/AddReview.js":"16","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewModal.js":"17","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewsSearch.js":"18"},{"size":702,"mtime":1609355385854,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1608828731125,"results":"21","hashOfConfig":"20"},{"size":3410,"mtime":1609886281688,"results":"22","hashOfConfig":"20"},{"size":4516,"mtime":1609885429671,"results":"23","hashOfConfig":"20"},{"size":5005,"mtime":1609955019804,"results":"24","hashOfConfig":"20"},{"size":1596,"mtime":1609886800691,"results":"25","hashOfConfig":"20"},{"size":1115,"mtime":1609777789504,"results":"26","hashOfConfig":"20"},{"size":6404,"mtime":1609954385712,"results":"27","hashOfConfig":"20"},{"size":17767,"mtime":1609968293560,"results":"28","hashOfConfig":"20"},{"size":1486,"mtime":1609792299288,"results":"29","hashOfConfig":"20"},{"size":58624,"mtime":1609363402937,"results":"30","hashOfConfig":"20"},{"size":894,"mtime":1609795884754,"results":"31","hashOfConfig":"20"},{"size":710,"mtime":1609964914599,"results":"32","hashOfConfig":"20"},{"size":307,"mtime":1609618380635,"results":"33","hashOfConfig":"20"},{"size":2272,"mtime":1609959437244,"results":"34","hashOfConfig":"20"},{"size":1098,"mtime":1609964357127,"results":"35","hashOfConfig":"20"},{"size":3290,"mtime":1609952746820,"results":"36","hashOfConfig":"20"},{"size":320,"mtime":1609964870811,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},"v29bki",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"41"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"41"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"41"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"41"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"41"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"41"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"41"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"41"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/index.js",["84","85","86","87"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Login from \"./containers/LoginContainer\";\nimport SignUp from \"./containers/SignUpContainer\";\nimport HomeContainer from \"./containers/HomeContainer\";\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById(\"app\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["88","89"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/reportWebVitals.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/HomeContainer.js",["90","91"],"import React, { Component } from \"react\";\nimport MapboxGLMap from \"../components/MapBoxGLMap\";\nimport Search from \"../components/Search\";\nimport Navbar from \"./Navbar\";\nimport FavoritesContainer from \"./FavoritesContainer\";\n\nconst token = localStorage.getItem(\"token\");\nconst USERID = localStorage.getItem(\"user_id\");\nconst favoritesId = localStorage.getItem(\"favorites_id\");\n\nclass HomeContainer extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loggedIn: false,\n      countries: [],\n      modalOpen: false,\n      countryId: \"\"\n    };\n  }\n\n  componentDidMount() {\n    if(token) {\n    \n      fetch(`http://localhost:3000/api/v1/users/${USERID}`, {\n        headers: { Authorization: `Bearer ${token}` },\n      })\n        .then((resp) => resp.json())\n        .then((data) => {\n          data.countries.map((country) =>\n            this.setState({\n              countries: [...this.state.countries, country.country_code],\n            })\n          );\n        });\n      }\n    \n  }\n\n  handleSearch = (event) => {\n    fetch(\"http://localhost:3000/api/v1/countries\", {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        data.filter((country) => {\n          if (\n            country.country_code === event &&\n            !this.state.countries.includes(country.country_code)\n          ) {\n            this.setState({\n              countries: [...this.state.countries, country.country_code],\n              countryId: country.id,\n            });\n          } else if (this.state.countries.includes(undefined)) {\n          \n            window.location.reload();\n          }\n        });\n      });\n    this.addCountry(event);\n  };\n\n  addCountry = (event) => {\n    fetch(\"http://localhost:3000/api/v1/countries\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify({\n        country_code: event,\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        this.setState({\n          countries: [...this.state.countries, data.country_code],\n          countryId: data.id,\n        });\n      });\n  };\n\n  removeCountry = (event) => {\n    let newCountry = this.state.countries.filter(country => country !== event)\n    this.setState({\n      countries: newCountry\n    })\n    console.log(newCountry)\n  }\n\n\n\n \n\n  setModal = (openOrClose) => this.setState({ modalOpen: openOrClose });\n\n\n  render() {\n    return (\n      <div>\n        <div>\n          {token\n            ? [\n                <Navbar key={1} />,\n                <Search\n                  handleAddReview={this.props.handleAddReview}\n                  key={2}\n                  handleSearch={this.handleSearch}\n                  setModal={this.setModal}\n                  removeCountry={this.removeCountry}\n                  \n                />,\n                <br/>,\n\n                <a className=\"country-codes\" href=\"https://www.iban.com/country-codes\" target=\"blank\">Look up Country Codes</a>\n              ]\n            : null}\n        </div>\n        <MapboxGLMap key={3} countries={this.state.countries} />\n        {this.state.countryId !== \"\" ? (\n          <FavoritesContainer key={4} countryId={this.state.countryId} />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default HomeContainer;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/LoginContainer.js",["92","93","94","95","96","97"],"import React, { useState, useEffect } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Login from \"../Login.css\";\nimport signUp from \"./SignUpContainer\";\nimport { BrowserRouter as Router, useHistory } from \"react-router-dom\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Atlas\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function SignIn({ handleUser }) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const history = useHistory();\n  const classes = useStyles();\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    fetch(\"http://localhost:3000/api/v1/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify({\n        user: {\n          username,\n          password,\n        },\n      }),\n    })\n      .then((resp) => resp.json())\n      .then((data) => {\n        localStorage.setItem(\"token\", data.jwt);\n        handleUser(data.user);\n        if (data.user) {\n          history.push(\"/home\");\n          window.location.reload()\n        }\n      });\n    setUsername(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form\n          className={classes.form}\n          noValidate\n          onSubmit={(e) => handleSubmit(e)}\n        >\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={username}\n            onChange={(event) => setUsername(event.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(event) => setPassword(event.target.value)}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              {/* <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link> */}\n            </Grid>\n            <Grid item container>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/SignUpContainer.js",["98","99"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/App.js",["100","101","102","103","104"],"import React, { Component } from \"react\";\nimport HomeContainer from \"./containers/HomeContainer\";\n\nimport SignIn from \"./containers/LoginContainer\";\nimport SignUp from \"./containers/SignUpContainer\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport Globe from \"./components/Globe\";\nimport Cover from \"./components/Cover\";\nimport Reviews from \"./containers/Reviews\";\nimport \"./App.css\";\n\nconst token = localStorage.getItem(\"token\");\nconst USERID = localStorage.getItem(\"user_id\");\nconst favoritesId = localStorage.getItem(\"favorites_id\");\n\nclass App extends Component {\n  // constructor() {\n  //   super();\n  //   this.state = {\n  //     redirect: null,\n  //   };\n  // }\n\n  handleUser = (userData) => {\n    localStorage.setItem(\"user_id\", userData.id);\n    localStorage.setItem(\"username\", userData.username);\n  };\n\n  // handleAddReview = () => {\n  //   this.setState({\n  //     redirect: \"/reviews\",\n  //   });\n  // };\n\n  render() {\n   \n    return (\n      <div>\n        <Route\n          path=\"/signup\"\n          component={(props) => (\n            <SignUp {...props} handleUser={this.handleUser} />\n          )}\n        />\n\n        <Route\n          path=\"/login\"\n          component={(props) => (\n            <SignIn {...props} handleUser={this.handleUser} />\n          )}\n        />\n        <Route\n          path=\"/home\"\n          component={HomeContainer}\n        />\n        <Route exact path=\"/\" component={Cover} />\n        <Route exact path=\"/\" component={Globe} />\n        {/* <Route exact path=\"/reviews\" component={Reviews} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/FavoritesContainer.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Navbar.js",["105","106"],"import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport ChatIcon from \"@material-ui/icons/Chat\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport Logout from \"../components/Logout\";\nimport Reviews from \"./Reviews\";\n\nconst drawerWidth = 400;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBar: {\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create([\"margin\", \"width\"], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: \"none\",\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    // justifyContent: \"flex-end\",\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create(\"margin\", {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n\n  marginAutoItem: {\n    // margin: \"auto\",\n    marginLeft: \"10px\",\n  },\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [logout, setLogout] = React.useState(false);\n  const [openReview, setReview] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        style={{ background: \"#333\" }}\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, open && classes.hide)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h4\" noWrap>\n            ATLAS\n          </Typography>\n          {/* <div className={classes.marginAutoItem}>\n            Welcome {localStorage.getItem(\"username\")}\n          </div> */}\n          <Typography className={classes.marginAutoItem} variant=\"h6\" noWrap>\n            Welcome {localStorage.getItem(\"username\")}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        className={classes.drawer}\n        variant=\"persistent\"\n        anchor=\"left\"\n        open={open}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <IconButton onClick={handleDrawerClose}>\n            {theme.direction === \"ltr\" ? (\n              <ChevronLeftIcon />\n            ) : (\n              <ChevronRightIcon />\n            )}\n          </IconButton>\n        </div>\n        <Divider />\n        <List>\n          {[\"Reviews\", \"Log Out\", \"Favorites\"].map((text, index) =>\n            index === 1 ? (\n              <ListItem\n                onClick={() => setLogout(true)}\n                button\n                key={text}\n                id={index}\n              >\n                <ListItemIcon>\n                  {index % 2 === 0 ? <ChatIcon /> : <CloseIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ) : index === 0 ? (\n              <ListItem\n                onClick={() => setReview(true)}\n                button\n                key={text}\n                id={index}\n              >\n                <ListItemIcon>\n                  {index % 2 === 0 ? <ChatIcon /> : <CloseIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            ) : (\n              <ListItem button key={text} id={index}>\n                <ListItemIcon>\n                  {index % 2 === 0 ? <ChatIcon /> : <CloseIcon />}\n                </ListItemIcon>\n                <ListItemText primary={text} />\n              </ListItem>\n            )\n          )}\n        </List>\n\n        {logout === true ? <Logout /> : null}\n        {openReview === true ? <Reviews /> : null}\n        <Divider />\n        {/* <List>\n          {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\n            <ListItem button key={text}>\n              <ListItemIcon>\n                {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List> */}\n      </Drawer>\n      <main\n        className={clsx(classes.content, {\n          [classes.contentShift]: open,\n        })}\n      >\n        <div className={classes.drawerHeader} />\n      </main>\n    </div>\n  );\n}\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Search.js",["107","108","109","110","111"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/MapBoxGLMap.js",["112","113","114"],"import \"../Map.css\";\nimport mapboxgl from \"mapbox-gl\";\nimport MapboxGeocoder from \"@mapbox/mapbox-gl-geocoder\";\nimport React, { useState, useEffect } from \"react\";\n\nconst MapboxGLMap = ({ countries }) => {\n  const [countryNames, newNames] = useState([\"name_en\"]);\n  const mapContainer = React.createRef();\n\n  useEffect(() => {\n    mapboxgl.accessToken =\n      \"pk.eyJ1IjoiamFjb2JrYWdvbiIsImEiOiJja2owZHM4NGUxbTN1MnJtd25pbHh5a2YwIn0.Ipv-6ntDnJw4WUD9ly3gcw\";\n    let firstPart = [\"in\", \"iso_3166_1_alpha_3\"];\n    const map = new mapboxgl.Map({\n      container: \"map\",\n      style: \"mapbox://styles/jacobkagon/ckjak6kt589rb19p228nwrycv\", // stylesheet location\n      center: [5, 46],\n      zoom: 2,\n    });\n\n    map.on(\"load\", () => {\n      // setMap(map);\n      map.resize();\n      map.addLayer(\n        {\n          id: \"country-boundaries\",\n          source: {\n            type: \"vector\",\n            url: \"mapbox://mapbox.country-boundaries-v1\",\n          },\n          \"source-layer\": \"country_boundaries\",\n          type: \"fill\",\n          paint: {\n            \"fill-color\": \"#780000\",\n            \"fill-opacity\": 0.4,\n          },\n        },\n        \"country-label\"\n      );\n      map.setFilter(\"country-boundaries\", firstPart.concat(countries));\n      map.addControl(\n        new MapboxGeocoder({\n          accessToken: mapboxgl.accessToken,\n          mapboxgl: mapboxgl,\n        })\n      );\n    });\n  });\n\n  return <div>{<div id=\"map\"></div>}</div>;\n};\n\nexport default MapboxGLMap;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Globe.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Cover.js",["115"],"import React from \"react\";\n\nexport default function Cover() {\n  return (\n    <div>\n      <div className=\"site-wrapper\">\n        <div className=\"site-wrapper-inner\">\n          <div className=\"container\">\n            <div className=\"masthead clearfix\">\n              <div className=\"container inner\">\n                <h3 className=\"masthead-brand\"></h3>\n                <nav>\n                  <ul className=\"nav masthead-nav\">\n                    <li className=\"active\">\n                      <a href=\"/home\">Map</a>\n                    </li>\n                    <li>\n                      <a href=\"/login\">Login</a>\n                    </li>\n                    <li>\n                      <a href=\"/signup\">SignUp</a>\n                    </li>\n                  </ul>\n                </nav>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/containers/Reviews.js",["116"],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Logout.js",["117"],"import React from 'react';\nimport {useHistory} from 'react-router-dom'\n\nconst Logout = () => {\n    const history = useHistory()\n    return (\n        <div>\n       { localStorage.clear(),\n        history.push(\"/\")\n        }\n\n        {/* {console.log(\"Hi\")} */}\n        </div>\n    );\n}\n\nexport default Logout;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/Modal.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/AddReview.js",[],"/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewModal.js",["118"],"import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\n// import TextField from '@material-ui/core/TextField';\nimport TextareaAutosize from \"@material-ui/core/TextareaAutosize\";\nimport Button from \"@material-ui/core/Button\";\nimport Rating from \"@material-ui/lab/Rating\";\n\nconst userId = localStorage.getItem(\"user_id\");\nconst token = localStorage.getItem(\"token\");\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n  },\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst ReviewModal = ({ open, renderReviewModal, countries, event }) => {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [countryId, newId] = React.useState(\"\");\n  const [value, setValue] = React.useState(0);\n  const [text, setText] = React.useState(\"\");\n\n  useEffect(() => {\n    countries.filter((country) =>\n      country.country_code === event ? newId(country.id) : null\n    );\n  });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/api/v1/reviews\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer  ${token}`,\n      },\n      body: JSON.stringify({\n        user_id: userId,\n        country_id: countryId,\n        rating: value,\n        body: text,\n      }),\n    })\n    .then(resp => resp.json())\n    .then(data => console.log(data))\n    document.getElementsByTagName('form')[1].reset()\n  };\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Add Review</h2>\n\n      <form\n        className={classes.root}\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e) => handleSubmit(e)}\n      >\n        <Rating\n          name=\"simple-controlled\"\n          value={value}\n          onChange={(event, newValue) => {\n            setValue(newValue);\n          }}\n        />\n        <TextareaAutosize\n          aria-label=\"minimum height\"\n          rowsMin={3}\n          placeholder=\"\"\n          onChange={(event) => setText(event.target.value)}\n        />\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n\n  const closeModal = () => {\n    renderReviewModal(false);\n  };\n\n  return (\n    <div>\n      <Modal\n        open={open}\n        onClose={closeModal}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n};\n\nexport default ReviewModal;\n","/Users/jacobkagon/Flatiron/code/atlas/atlas-frontend/atlas-frontend/src/components/ReviewsSearch.js",["119"],{"ruleId":"120","severity":1,"message":"121","line":6,"column":35,"nodeType":"122","messageId":"123","endLine":6,"endColumn":40},{"ruleId":"120","severity":1,"message":"124","line":7,"column":8,"nodeType":"122","messageId":"123","endLine":7,"endColumn":13},{"ruleId":"120","severity":1,"message":"125","line":8,"column":8,"nodeType":"122","messageId":"123","endLine":8,"endColumn":14},{"ruleId":"120","severity":1,"message":"126","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":21},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"120","severity":1,"message":"131","line":9,"column":7,"nodeType":"122","messageId":"123","endLine":9,"endColumn":18},{"ruleId":"132","severity":1,"message":"133","line":47,"column":31,"nodeType":"134","messageId":"135","endLine":47,"endColumn":33},{"ruleId":"120","severity":1,"message":"136","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"124","line":15,"column":8,"nodeType":"122","messageId":"123","endLine":15,"endColumn":13},{"ruleId":"120","severity":1,"message":"137","line":16,"column":8,"nodeType":"122","messageId":"123","endLine":16,"endColumn":14},{"ruleId":"120","severity":1,"message":"138","line":17,"column":27,"nodeType":"122","messageId":"123","endLine":17,"endColumn":33},{"ruleId":"120","severity":1,"message":"139","line":55,"column":10,"nodeType":"122","messageId":"123","endLine":55,"endColumn":16},{"ruleId":"120","severity":1,"message":"140","line":55,"column":18,"nodeType":"122","messageId":"123","endLine":55,"endColumn":27},{"ruleId":"120","severity":1,"message":"124","line":15,"column":8,"nodeType":"122","messageId":"123","endLine":15,"endColumn":13},{"ruleId":"120","severity":1,"message":"138","line":16,"column":27,"nodeType":"122","messageId":"123","endLine":16,"endColumn":33},{"ruleId":"120","severity":1,"message":"141","line":6,"column":17,"nodeType":"122","messageId":"123","endLine":6,"endColumn":25},{"ruleId":"120","severity":1,"message":"142","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":15},{"ruleId":"120","severity":1,"message":"143","line":12,"column":7,"nodeType":"122","messageId":"123","endLine":12,"endColumn":12},{"ruleId":"120","severity":1,"message":"144","line":13,"column":7,"nodeType":"122","messageId":"123","endLine":13,"endColumn":13},{"ruleId":"120","severity":1,"message":"131","line":14,"column":7,"nodeType":"122","messageId":"123","endLine":14,"endColumn":18},{"ruleId":"120","severity":1,"message":"145","line":18,"column":8,"nodeType":"122","messageId":"123","endLine":18,"endColumn":17},{"ruleId":"120","severity":1,"message":"146","line":19,"column":8,"nodeType":"122","messageId":"123","endLine":19,"endColumn":16},{"ruleId":"120","severity":1,"message":"136","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"147","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"148","line":58,"column":9,"nodeType":"122","messageId":"123","endLine":58,"endColumn":19},{"ruleId":"132","severity":1,"message":"133","line":68,"column":40,"nodeType":"134","messageId":"135","endLine":68,"endColumn":42},{"ruleId":"120","severity":1,"message":"149","line":75,"column":9,"nodeType":"122","messageId":"123","endLine":75,"endColumn":24},{"ruleId":"120","severity":1,"message":"150","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":22},{"ruleId":"120","severity":1,"message":"151","line":7,"column":24,"nodeType":"122","messageId":"123","endLine":7,"endColumn":32},{"ruleId":"120","severity":1,"message":"152","line":8,"column":9,"nodeType":"122","messageId":"123","endLine":8,"endColumn":21},{"ruleId":"153","severity":1,"message":"154","line":11,"column":17,"nodeType":"155","endLine":11,"endColumn":48},{"ruleId":"120","severity":1,"message":"156","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":17},{"ruleId":"157","severity":1,"message":"158","line":8,"column":30,"nodeType":"159","messageId":"160","endLine":8,"endColumn":31},{"ruleId":"120","severity":1,"message":"161","line":1,"column":28,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"162","severity":1,"message":"163","line":5,"column":5,"nodeType":"164","messageId":"165","endLine":7,"endColumn":10},"no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","'SignUp' is defined but never used.","'HomeContainer' is defined but never used.","no-native-reassign",["166"],"no-negated-in-lhs",["167"],"'favoritesId' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useEffect' is defined but never used.","'signUp' is defined but never used.","'Router' is defined but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'Redirect' is defined but never used.","'Reviews' is defined but never used.","'token' is assigned a value but never used.","'USERID' is assigned a value but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'SearchBar' is defined but never used.","'countryIds' is assigned a value but never used.","'filterCountryID' is assigned a value but never used.","'countryNames' is assigned a value but never used.","'newNames' is assigned a value but never used.","'mapContainer' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'AddReview' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'useState' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]